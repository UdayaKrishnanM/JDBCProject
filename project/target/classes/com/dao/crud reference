            // Check if the testRank, ODIRank, or T20Rank is free
//            String checkQuery = "SELECT * FROM Ranks WHERE player_id = ?";
//            try(PreparedStatement checkStatement = connection.prepareStatement(checkQuery)){
//                checkStatement.setInt(1, id);
//                ResultSet resultSet = checkStatement.executeQuery();
//                if(resultSet.next()) {
//                    if(role.equals("testRank")) {
//                        if(resultSet.getInt("test_rank_number") != 0) {
//                            ranksManagementDAO.checkTestRank(id, resultSet.getInt("test_rank_number"));
//                        } else {
//                        	System.out.println("Rank not available");
//                        }
//                    } else if(role.equals("ODIRank")) {
//                        if(resultSet.getInt("odi_rank_number") != 0) {
//                        	ranksManagementDAO.checkODIRank(id, resultSet.getInt("odi_rank_number"));
//                        } else {
//                        	System.out.println("Rank not available");
//                        }
//                    } else if(role.equals("T20Rank")) {
//                        if(resultSet.getInt("t20_rank_number") != 0) {
//                        	ranksManagementDAO.checkT20Rank(id, resultSet.getInt("t20_rank_number"));
//                        } else {
//                        	System.out.println("Rank not available");
//                        }
//                    }
//                }
//            } catch(SQLException e) {
//                e.printStackTrace();
//            }

























DBConnection connect = new DBConnection();
    
    public void addPlayer(Player player) {
        String query = "INSERT INTO cricketdummy(player_id, name, age, state, role_no, t20_rank_number, odi_rank_number, test_rank_number) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        try (Connection connection = connect.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement(query)) {

            preparedStatement.setInt(1, player.getPlayerId());
            preparedStatement.setString(2, player.getName());
            preparedStatement.setInt(3, player.getAge());
            preparedStatement.setString(4, player.getState());
            preparedStatement.setString(5, player.getRoleNo());
            preparedStatement.setInt(6, player.getT20Ranking());
            preparedStatement.setInt(7, player.getODIRanking());
            preparedStatement.setInt(8, player.getTestRanking());

            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    //add service layer, exception handling, main -> service ->dao
    
    public void topPlayers(String format, String role, int limit) throws SQLException {
    	String query = "SELECT name, " + format.toLowerCase() + "_rank_number FROM cricketdummy WHERE role_no = ? ORDER BY " + format.toLowerCase() + "_rank_number LIMIT ?";
        try (Connection connection = connect.getConnection();
        		PreparedStatement statement = connection.prepareStatement(query)){
	        
        	statement.setString(1, role);
	        statement.setInt(2, limit);
	        ResultSet resultSet = statement.executeQuery();
	        
	        System.out.println("Top " + limit + " " + role + " in " + format + ":");
	        while (resultSet.next()) {
	            String playerName = resultSet.getString("name");
	            int rankNumber = resultSet.getInt(format.toLowerCase() + "_rank_number");
	            System.out.println(playerName + " (Rank: " + rankNumber + ")");
	        }
	        System.out.println();
        } catch (SQLException e) {
        	e.printStackTrace();
        }
    }
    
    
    public void readPlayers() {
        String query = "SELECT * FROM cricketdummy";

        try(Connection connection = connect.getConnection();
             Statement statement = connection.createStatement();
             ResultSet resultSet = statement.executeQuery(query)) {

            while (resultSet.next()) {
                System.out.println("Player ID: " + resultSet.getInt("player_id"));
                System.out.println("Name: " + resultSet.getString("name"));
                System.out.println("Age: " + resultSet.getInt("age"));
                System.out.println("State: " + resultSet.getString("state"));
                System.out.println("T20 Ranking: " + resultSet.getInt("t20_rank_number"));
                System.out.println("ODI Ranking: " + resultSet.getInt("odi_rank_number"));
                System.out.println("Test Ranking: " + resultSet.getInt("test_rank_number"));
                System.out.println("---------------------------");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public void deletePlayer(int id) {
        String query = "DELETE FROM cricketdummy WHERE Player_id = ?";
        try (Connection connection = connect.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, id); // Set the value for parameter 1 (ID)
            statement.execute();
            System.out.println("Player with ID " + id + " has been deleted successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    
    public void updateAge(int id, int age) {
        String query = "UPDATE cricketdummy SET age = ? WHERE player_id = ?";
        try(Connection connection = connect.getConnection();
            PreparedStatement statement = connection.prepareStatement(query)){
            statement.setInt(1, age);
            statement.setInt(2, id);
            statement.executeUpdate();
        } catch(SQLException e) {
            e.printStackTrace();
        }
    }

    public void updateRole(int id, String role) {
        String query = "UPDATE cricketdummy SET role_no = ? WHERE player_id = ?";
        try(Connection connection = connect.getConnection();
            PreparedStatement statement = connection.prepareStatement(query)){
            statement.setString(1, role);
            statement.setInt(2, id);
            statement.executeUpdate();
            
            // Check if the testRank, ODIRank, or T20Rank is free
            String checkQuery = "SELECT * FROM cricketdummy WHERE player_id = ?";
            try(PreparedStatement checkStatement = connection.prepareStatement(checkQuery)){
                checkStatement.setInt(1, id);
                ResultSet resultSet = checkStatement.executeQuery();
                if(resultSet.next()) {
                    if(role.equals("testRank")) {
                        if(resultSet.getInt("test_rank_number") != 0) {
                            updateT20Ranking(id, resultSet.getInt("test_rank_number"));
                        }
                    } else if(role.equals("ODIRank")) {
                        if(resultSet.getInt("odi_rank_number") != 0) {
                            updateT20Ranking(id, resultSet.getInt("odi_rank_number"));
                        }
                    } else if(role.equals("T20Rank")) {
                        if(resultSet.getInt("t20_rank_number") != 0) {
                            updateT20Ranking(id, resultSet.getInt("t20_rank_number"));
                        }
                    }
                }
            } catch(SQLException e) {
                e.printStackTrace();
            }
        } catch(SQLException e) {
            e.printStackTrace();
        }
    }

    public void updateT20Ranking(int id, int rank) {
        String query = "UPDATE cricketdummy SET t20_rank_number = ? WHERE player_id = ?";
        try(Connection connection = connect.getConnection();
            PreparedStatement statement = connection.prepareStatement(query)){
            statement.setInt(1, rank);
            statement.setInt(2, id);
            statement.executeUpdate();
            
            // Check if any one holds the given rank in t20_rank_number column
            String checkQuery = "SELECT * FROM cricketdummy WHERE t20_rank_number = ?";
            try(PreparedStatement checkStatement = connection.prepareStatement(checkQuery)){
                checkStatement.setInt(1, rank);
                ResultSet resultSet = checkStatement.executeQuery();
                if(resultSet.next()) {
                    // If the rank is held by someone else, update the rank of the player who held it
                    String updateQuery = "UPDATE cricketdummy SET t20_rank_number = ? WHERE player_id = ?";
                    try(PreparedStatement updateStatement = connection.prepareStatement(updateQuery)){
                        updateStatement.setInt(1, rank + 1);
                        updateStatement.setInt(2, resultSet.getInt("player_id"));
                        updateStatement.executeUpdate();
                    } catch(SQLException e) {
                        e.printStackTrace();
                    }
                }
            } catch(SQLException e) {
                e.printStackTrace();
            }
        } catch(SQLException e) {
            e.printStackTrace();
        }
    }
    
   
    
 
    public void updateODIRanking(int id, int rank) {
    	String query = "UPDATE crciketdummy SET odi_rank_number = ? WHERE player_id = ?";
    	try(Connection connection = connect.getConnection();
    		PreparedStatement statement = connection.prepareStatement(query)){
    		//fill the code if any one holds given rank in odi_rank_number column check which is available and update to that
            statement.setInt(1, rank);
            statement.setInt(2, id);
            statement.executeUpdate();
            
            // Check if any one holds the given rank in t20_rank_number column
            String checkQuery = "SELECT * FROM cricketdummy WHERE odi_rank_number = ?";
            try(PreparedStatement checkStatement = connection.prepareStatement(checkQuery)){
                checkStatement.setInt(1, rank);
                ResultSet resultSet = checkStatement.executeQuery();
                if(resultSet.next()) {
                    // If the rank is held by someone else, update the rank of the player who held it
                    String updateQuery = "UPDATE cricketdummy SET odi_rank_number = ? WHERE player_id = ?";
                    try(PreparedStatement updateStatement = connection.prepareStatement(updateQuery)){
                        updateStatement.setInt(1, rank + 1);
                        updateStatement.setInt(2, resultSet.getInt("player_id"));
                        updateStatement.executeUpdate();
                    } catch(SQLException e) {
                        e.printStackTrace();
                    }
                }
            } catch(SQLException e) {
                e.printStackTrace();
            }
    		
    	} catch(SQLException e) {
    		e.printStackTrace();
    	}
    }
    
    public void updateTestRanking(int id, int rank) {
    	String query = "UPDATE crciketdummy SET test_rank_number = ? WHERE player_id = ?";
    	try(Connection connection = connect.getConnection();
    		PreparedStatement statement = connection.prepareStatement(query)){
    		//fill the code if any one holds given rank in test_rank_number column check which is available and update to that
            statement.setInt(1, rank);
            statement.setInt(2, id);
            statement.executeUpdate();
            
            // Check if any one holds the given rank in t20_rank_number column
            String checkQuery = "SELECT * FROM cricketdummy WHERE test_rank_number = ?";
            try(PreparedStatement checkStatement = connection.prepareStatement(checkQuery)){
                checkStatement.setInt(1, rank);
                ResultSet resultSet = checkStatement.executeQuery();
                if(resultSet.next()) {
                    // If the rank is held by someone else, update the rank of the player who held it
                    String updateQuery = "UPDATE cricketdummy SET test_rank_number = ? WHERE player_id = ?";
                    try(PreparedStatement updateStatement = connection.prepareStatement(updateQuery)){
                        updateStatement.setInt(1, rank + 1);
                        updateStatement.setInt(2, resultSet.getInt("player_id"));
                        updateStatement.executeUpdate();
                    } catch(SQLException e) {
                        e.printStackTrace();
                    }
                }
            } catch(SQLException e) {
                e.printStackTrace();
            }
    		
    	} catch(SQLException e) {
    		e.printStackTrace();
    	}
    }